/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { Clone, Html, Mask, useGLTF, useMask } from '@react-three/drei'
import About from '../Sections/About'
import { useFrame, useThree } from '@react-three/fiber'
import { useEffect, useRef, useState } from 'react'
import * as THREE from 'three'
const MacModel = ({ scale =1 , ...props}) => {
  const { nodes, materials } = useGLTF('/models/mac-draco.glb')
  useFrame(() => {
    // console.log(nodes.Cube008_2)
  })

   const meshRef = useRef(); 
  const { camera } = useThree();
  const [domPosition, setDomPosition] = useState([0, 0, 0]);

  // Update the HTML position when the mesh or camera changes
  useEffect(() => {
    if (meshRef.current) {
      const meshPosition = meshRef.current.getWorldPosition(new THREE.Vector3());
      const projected = meshPosition.project(camera);
      setDomPosition([projected.x * scale, projected.y * scale, 0]);
    }
  }, [camera]);
  
  return (
    <group {...props} dispose={null} scale={0.1}>
      <group position={[0.002, -0.038, 0.414]} rotation={[0.014, 0, 0]} >
        <group position={[0, 2.965, -0.13]} rotation={[Math.PI / 2, 0, 0]}>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Cube008.geometry}
            material={materials.aluminium}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Cube008_1.geometry}
          material={materials['matte.001']}
          
          />
          <mesh
          ref={meshRef}
            castShadow
            receiveShadow
            geometry={nodes.Cube008_2.geometry}
            >
              <Html rotation-x={-Math.PI /2 } position={domPosition} transform>
     <div
          style={{
            backgroundColor: 'rgba(255, 255, 255, 0.9)',
            padding: '10px',
            border: '1px solid #ccc',
            borderRadius: '5px',
          }}
        >
          <About />
        </div>
              </Html>
            </mesh>
              

          
        </group>
      </group>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.keyboard.geometry}
        material={materials.keys}
        position={[1.793, 0, 3.451]}
      />
      <group position={[0, -0.1, 3.394]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube002.geometry}
          material={materials.aluminium}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube002_1.geometry}
          material={materials.trackpad}
        />
      </group>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.touchbar.geometry}
        material={materials.touchbar}
        position={[0, -0.027, 1.201]}
      />
    </group>
  )
}

useGLTF.preload('/models/mac-draco.glb')
export default MacModel